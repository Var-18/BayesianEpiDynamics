---
title: "SEIR Model Analysis"
format: 
  html: 
    df-print: paged
    embed-resources: true
---

```{r, message=FALSE}
library(outbreaks)
library(tidyverse)
library(rstan)
library(gridExtra)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
```

```{r}
glimpse(influenza_england_1978_school)
```

```{r}
# time series of cases
cases <- influenza_england_1978_school$in_bed  # Number of students in bed

# total count
N <- 763

# times
n_days <- length(cases)
t <- seq(0, n_days, by = 1)
t0 = 0 
t <- t[-1]

# initial conditions
i0 <- 1
e0 <- 2  # Assuming some exposed individuals initially
s0 <- N - i0 - e0
r0 <- 0
y0 = c(S = s0, E = e0, I = i0, R = r0)

# data for Stan
data_seir <- list(n_days = n_days, y0 = y0, t0 = t0, ts = t, N = N, cases = cases)

# number of MCMC steps
niter <- 2000
```

```{r}
model <- stan_model("SEIR_School_POIS.stan")
```

```{r}
fit_seir_pois <- sampling(model,
                data = data_seir,
                iter = niter,
                chains = 4, 
                seed = 0)
```

```{r}
pars=c('beta', 'sigma', 'gamma', "R0", "incubation_period", "recovery_time")
```

```{r}
print(fit_seir_pois, pars = pars)
```

```{r}
stan_dens(fit_seir_pois, pars = pars, separate_chains = TRUE)
```

```{r}
smr_pred <- cbind(as.data.frame(summary(
  fit_seir_pois, pars = "pred_cases", probs = c(0.05, 0.5, 0.95))$summary), t, cases)
colnames(smr_pred) <- make.names(colnames(smr_pred)) # to remove % in the col names

ggplot(smr_pred, mapping = aes(x = t)) +
  geom_ribbon(aes(ymin = X5., ymax = X95.), fill = 'red', alpha = 0.35) +
  geom_line(mapping = aes(x = t, y = X50.), color = 'red') + 
  geom_point(mapping = aes(y = cases)) +
  labs(x = "Day", y = "Number of students in bed")
```

Predicted Cases vs. Actual Cases
X-Axis (Day): This represents the days in the time series of the influenza outbreak.
Y-Axis (Number of Students in Bed): This represents the number of students who are in bed due to influenza on each day.
Red Ribbon (Uncertainty Interval): The shaded red area shows the 90% credible interval (between the 5th and 95th percentiles) of the predicted number of cases from the SEIR model. This interval gives an idea of the uncertainty around the model's predictions.
Red Line (Median Prediction): The solid red line represents the median (50th percentile) predicted number of cases from the SEIR model. This is the most likely number of cases according to the model.
Black Points (Actual Cases): The black points represent the actual observed number of students in bed due to influenza on each day.

```{r}
params <- lapply(t, function(i){sprintf("y[%s,3]", i)}) # number of infected for each day
smr_y <- as.data.frame(summary(fit_seir_pois, 
                               pars = params, probs = c(0.05, 0.5, 0.95))$summary)
colnames(smr_y) <- make.names(colnames(smr_y)) # to remove % in the col names

ggplot(smr_y, mapping = aes(x = t)) +
  geom_ribbon(aes(ymin = X5., ymax = X95.), fill = 'red', alpha = 0.35) +
  geom_line(mapping = aes(x = t, y = X50.), color = 'red') + 
  labs(x = "Day", y = "Number of infected students")
```

Predicted Number of Infected Students

X-Axis (Day): This represents the days in the time series of the influenza outbreak.
Y-Axis (Number of Infected Students): This represents the number of students who are currently infectious on each day, as predicted by the SEIR model.
Red Ribbon (Uncertainty Interval): The shaded red area shows the 90% credible interval (between the 5th and 95th percentiles) of the predicted number of infected students. This indicates the range within which the true number of infected students is expected to lie, with 90% probability.
Red Line (Median Prediction): The solid red line represents the median (50th percentile) predicted number of infected students from the SEIR model.

# Quassi Poission 


```{r}
model2 <- stan_model("SEIR_School_QuassiPoission.stan")
```

```{r}
fit_qp  <- sampling(model2,
                data = data_seir,
                iter = niter,
                chains = 4, 
                seed = 0)
```

```{r}
# Density plots for the parameters
stan_dens(fit_qp, pars = pars, separate_chains = TRUE)

# Summarize predicted cases
smr_pred <- cbind(as.data.frame(summary(
  fit_qp, pars = "pred_cases", probs = c(0.05, 0.5, 0.95))$summary), t, cases)
colnames(smr_pred) <- make.names(colnames(smr_pred)) # to remove % in the col names

# Plot predicted cases with  intervals
ggplot(smr_pred, mapping = aes(x = t)) +
  geom_ribbon(aes(ymin = X5., ymax = X95.), fill = 'red', alpha = 0.35) +
  geom_line(mapping = aes(x = t, y = X50.), color = 'red') + 
  geom_point(mapping = aes(y = cases)) +
  labs(x = "Day", y = "Number of students in bed")

# Summarize the number of infected for each day
params <- lapply(1:n_days, function(i){sprintf("y[%s,3]", i)}) # number of infected for each day
smr_y <- as.data.frame(summary(fit_qp, 
                               pars = params, probs = c(0.05, 0.5, 0.95))$summary)
colnames(smr_y) <- make.names(colnames(smr_y)) # to remove % in the col names

# Plot the number of infected with  intervals
ggplot(smr_y, mapping = aes(x = t)) +
  geom_ribbon(aes(ymin = X5., ymax = X95.), fill = 'red', alpha = 0.35) +
  geom_line(mapping = aes(x = t, y = X50.), color = 'red') + 
  labs(x = "Day", y = "Number of infected students")
```

